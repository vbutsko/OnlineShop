<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <http pattern="/" security="none"/>
    <http pattern="/home" security="none"/>
    <http pattern="/login" security="none"/>
    <http pattern="/403" security="none"/>
    <http pattern="/cart/**" security="none"/>
    <http pattern="/total/**" security="none"/>
    <http pattern="/mobilephones/**" security="none"/>
    <http pattern="/order/**" security="none"/>
    <http auto-config="true" use-expressions="true">

        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <access-denied-handler error-page="/403" />

        <form-login
                login-page="/login"
                default-target-url="/home"
                authentication-failure-url="/login?error"
        />

        <logout logout-success-url="/login?logout"  />
    </http>
    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service id="userService" data-source-ref="dataSource"
                       users-by-username-query="select username, password, CASE ENABLED WHEN 1 THEN 'true' ELSE 'false' END 'ENABLED' from users where username=?"
                       authorities-by-username-query="select username,role from user_roles where username=?"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>